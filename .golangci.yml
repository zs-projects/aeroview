linters-settings:
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - unlabelStmt
      - ifElseChain
      - unnamedResult
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 18
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 90
  govet:
    check-shadowing: false
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - deadcode
    - dupl
    - vet
    - errcheck
    - exhaustive
    - gocritic
    - gofmt
    - goimports
    - ineffassign
    - interfacer
    - structcheck
    - unconvert
    - unparam
    - varcheck
    - maligned
    - prealloc
    - exportloopref
    - stylecheck
  # don't enable:
  # - bodyclose
  # - depguard
  # - dogsled
  # - funlen
  # - goconst
  # - gocyclo
  # - goprintffuncname
  # - gosimple
  # - nakedret
  # - noctx
  # - rowserrcheck
  # - staticcheck
  # - typecheck
  # - whitespace
  # - sqlclosecheck
  # - godox
  # - asciicheck
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - nestif
  # - testpackage

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd

    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

    - linters:
        - staticcheck
      text: "SA1017:"

    - linters:
        - stylecheck
      text: "ST1003: should not use ALL_CAPS in Go names; use CamelCase instead"

    - linters:
        - errcheck
      text: "Error return value of `http.ListenAndServe` is not checked"



run:
  skip-dirs:
    - test/testdata_etc
    - internal/cache
    - internal/renameio
    - internal/robustio

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.30.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"a
